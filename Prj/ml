#! /bin/bash

echo "LISP-like to Standard ML of New Jersey v110.79 [built: Tue Aug  8 23:21:20 2017]"
echo "Type a lisp like expression, press Ctrl-C to exit"

while true;
do
echo

# take lisp-like expression as input from user
input=$(rlwrap -p -S '- ' -H stack -o cat)
#read -p '- ' input

# apply commands "eval expression" and "get-type-of expression" 
exp="val exp = ""$input"";"
eval_exp="printer exp;"
get_type="typeOf exp;"

# write commands on the interpreter 
echo $exp >> ml.sml
echo $eval_exp >> ml.sml
echo $get_type >> ml.sml

# run the mini-lisp intrepreter and store the result in foo
(sml < ml.sml) > .foo
#cat -n foo

# print result on console
echo 
res=$(sed -n 178p .foo)
res_type=$(sed -n 182p .foo )
echo $res :" "${res_type:2}
echo

# clear foo
rm .foo

#removing valutated expression from the interpreter file
sed -i.bak -e '283,285d' ml.sml
#sed -e '283,285d' ml.sml
rm ml.sml.bak

#bar=$(tail -2 foo | head -1 | awk -F" " '{print $4}')
#echo $bar

#bar="${bar%\"}"
#bar="${bar#\"}"
#bar="${bar//\\}"

#echo $bar > tmp


#(sml < tmp) > foo

#tail -n +2 foo | head -1 > tmp; mv tmp foo
#tail -2 foo | awk -F" " '{$2=""; print $0}' | awk -F" " '{$1=$1} 1'
#
#head -n -2 ml.sml > tmp; mv tmp ml.sml
#rm foo
#echo

done

